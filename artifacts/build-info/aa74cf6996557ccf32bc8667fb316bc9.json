{
  "id": "aa74cf6996557ccf32bc8667fb316bc9",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.6.6",
  "solcLongVersion": "0.6.6+commit.6c089d02",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/deployment/SimpleFactory.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\n// Last deployed from commit: c5c938a0524b45376dd482cd5c8fb83fa94c2fcc;\npragma solidity 0.6.6;\n\nimport \"../mock/SimpleContract.sol\";\n\n\n/**\n * @title PoolFactory\n * @dev Contract factory allowing anyone to deploy a pool contract\n */\ncontract SimpleFactory {\n  function deployPool() public {\n    SimpleContract pool = new SimpleContract();\n    emit SimpleContractDeployed(address(pool));\n  }\n\n  /**\n   * @dev emitted after pool is deployed by any user\n   * @param poolAddress of deployed pool\n   **/\n  event SimpleContractDeployed(address poolAddress);\n}"
      },
      "contracts/mock/SimpleContract.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\n// Last deployed using commit: ;\npragma solidity ^0.6.6;\n\n/**\n * @title SimpleContract\n * @dev A mock implementation of a SmartLoan to check if upgrade mechanism correctly update contract logic\n */\ncontract SimpleContract {\n  function getHello() public view  returns (string memory) {\n    return \"Hello world\";\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/deployment/SimpleFactory.sol": {
        "SimpleFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "poolAddress",
                  "type": "address"
                }
              ],
              "name": "SimpleContractDeployed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "deployPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract factory allowing anyone to deploy a pool contract",
            "methods": {},
            "title": "PoolFactory"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061024e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806314d5275114610030575b600080fd5b61003861003a565b005b6000604051610048906100cd565b604051809103906000f080158015610064573d6000803e3d6000fd5b5090507f2e58e9968e3cf988b4362d2d13ba72a5045fd9e831335d01d9994c64faffae9c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b61013e806100db8339019056fe608060405234801561001057600080fd5b5061011e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da9b77214602d575b600080fd5b603360ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101560715780820151818401526020810190506058565b50505050905090810190601f168015609d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040518060400160405280600b81526020017f48656c6c6f20776f726c6400000000000000000000000000000000000000000081525090509056fea26469706673582212209a8d6f1282cecbdf130d6962b2ff9b109f24616c4209b1ff4ac29c2b1ed1161d64736f6c63430006060033a264697066735822122085fa0c659c6507541f193be06ee64dfda006c9573597a743b76872e4124ebd6f64736f6c63430006060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14D52751 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x48 SWAP1 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH32 0x2E58E9968E3CF988B4362D2D13BA72A5045FD9E831335D01D9994C64FAFFAE9C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x13E DUP1 PUSH2 0xDB DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA9B772 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH1 0x71 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x58 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH1 0x9D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F20776F726C64000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 DUP14 PUSH16 0x1282CECBDF130D6962B2FF9B109F2461 PUSH13 0x4209B1FF4AC29C2B1ED1161D64 PUSH20 0x6F6C63430006060033A264697066735822122085 STATICCALL 0xC PUSH6 0x9C6507541F19 EXTCODESIZE 0xE0 PUSH15 0xE64DFDA006C9573597A743B76872E4 SLT 0x4E 0xBD PUSH16 0x64736F6C634300060600330000000000 ",
              "sourceMap": "271:320:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;271:320:0;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806314d5275114610030575b600080fd5b61003861003a565b005b6000604051610048906100cd565b604051809103906000f080158015610064573d6000803e3d6000fd5b5090507f2e58e9968e3cf988b4362d2d13ba72a5045fd9e831335d01d9994c64faffae9c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b61013e806100db8339019056fe608060405234801561001057600080fd5b5061011e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da9b77214602d575b600080fd5b603360ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101560715780820151818401526020810190506058565b50505050905090810190601f168015609d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040518060400160405280600b81526020017f48656c6c6f20776f726c6400000000000000000000000000000000000000000081525090509056fea26469706673582212209a8d6f1282cecbdf130d6962b2ff9b109f24616c4209b1ff4ac29c2b1ed1161d64736f6c63430006060033a264697066735822122085fa0c659c6507541f193be06ee64dfda006c9573597a743b76872e4124ebd6f64736f6c63430006060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14D52751 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x48 SWAP1 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH32 0x2E58E9968E3CF988B4362D2D13BA72A5045FD9E831335D01D9994C64FAFFAE9C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x13E DUP1 PUSH2 0xDB DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA9B772 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH1 0x71 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x58 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH1 0x9D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F20776F726C64000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 DUP14 PUSH16 0x1282CECBDF130D6962B2FF9B109F2461 PUSH13 0x4209B1FF4AC29C2B1ED1161D64 PUSH20 0x6F6C63430006060033A264697066735822122085 STATICCALL 0xC PUSH6 0x9C6507541F19 EXTCODESIZE 0xE0 PUSH15 0xE64DFDA006C9573597A743B76872E4 SLT 0x4E 0xBD PUSH16 0x64736F6C634300060600330000000000 ",
              "sourceMap": "271:320:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;271:320:0;;;;;;;;;;;;;;;;12:1:-1;9;2:12;298:130:0;;;:::i;:::-;;;333:19;355:20;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;355:20:0;333:42;;386:37;417:4;386:37;;;;;;;;;;;;;;;;;;;;;;298:130;:::o;271:320::-;;;;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "118000",
                "executionCost": "165",
                "totalCost": "118165"
              },
              "external": {
                "deployPool()": "infinite"
              }
            },
            "methodIdentifiers": {
              "deployPool()": "14d52751"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"SimpleContractDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deployPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract factory allowing anyone to deploy a pool contract\",\"methods\":{},\"title\":\"PoolFactory\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/deployment/SimpleFactory.sol\":\"SimpleFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deployment/SimpleFactory.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n// Last deployed from commit: c5c938a0524b45376dd482cd5c8fb83fa94c2fcc;\\npragma solidity 0.6.6;\\n\\nimport \\\"../mock/SimpleContract.sol\\\";\\n\\n\\n/**\\n * @title PoolFactory\\n * @dev Contract factory allowing anyone to deploy a pool contract\\n */\\ncontract SimpleFactory {\\n  function deployPool() public {\\n    SimpleContract pool = new SimpleContract();\\n    emit SimpleContractDeployed(address(pool));\\n  }\\n\\n  /**\\n   * @dev emitted after pool is deployed by any user\\n   * @param poolAddress of deployed pool\\n   **/\\n  event SimpleContractDeployed(address poolAddress);\\n}\",\"keccak256\":\"0xb5b9a009b2ed8de5cc010e999e11e31e9e73752997a9ee517fd475e81e44a658\"},\"contracts/mock/SimpleContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n// Last deployed using commit: ;\\npragma solidity ^0.6.6;\\n\\n/**\\n * @title SimpleContract\\n * @dev A mock implementation of a SmartLoan to check if upgrade mechanism correctly update contract logic\\n */\\ncontract SimpleContract {\\n  function getHello() public view  returns (string memory) {\\n    return \\\"Hello world\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x451fa7f4d893b1cf6010054d82a3a260e0d179eae7ebc944be38b6e79785e842\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "contracts/mock/SimpleContract.sol": {
        "SimpleContract": {
          "abi": [
            {
              "inputs": [],
              "name": "getHello",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "A mock implementation of a SmartLoan to check if upgrade mechanism correctly update contract logic",
            "methods": {},
            "title": "SimpleContract"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061011e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da9b77214602d575b600080fd5b603360ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101560715780820151818401526020810190506058565b50505050905090810190601f168015609d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040518060400160405280600b81526020017f48656c6c6f20776f726c6400000000000000000000000000000000000000000081525090509056fea26469706673582212209a8d6f1282cecbdf130d6962b2ff9b109f24616c4209b1ff4ac29c2b1ed1161d64736f6c63430006060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA9B772 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH1 0x71 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x58 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH1 0x9D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F20776F726C64000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 DUP14 PUSH16 0x1282CECBDF130D6962B2FF9B109F2461 PUSH13 0x4209B1FF4AC29C2B1ED1161D64 PUSH20 0x6F6C634300060600330000000000000000000000 ",
              "sourceMap": "237:118:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;237:118:1;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80638da9b77214602d575b600080fd5b603360ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101560715780820151818401526020810190506058565b50505050905090810190601f168015609d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606040518060400160405280600b81526020017f48656c6c6f20776f726c6400000000000000000000000000000000000000000081525090509056fea26469706673582212209a8d6f1282cecbdf130d6962b2ff9b109f24616c4209b1ff4ac29c2b1ed1161d64736f6c63430006060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA9B772 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH1 0x71 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x58 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH1 0x9D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F20776F726C64000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 DUP14 PUSH16 0x1282CECBDF130D6962B2FF9B109F2461 PUSH13 0x4209B1FF4AC29C2B1ED1161D64 PUSH20 0x6F6C634300060600330000000000000000000000 ",
              "sourceMap": "237:118:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;237:118:1;;;;;;;;;;;;;;;;12:1:-1;9;2:12;265:88:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;265:88:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:13;328:20;;;;;;;;;;;;;;;;;;;265:88;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "57200",
                "executionCost": "105",
                "totalCost": "57305"
              },
              "external": {
                "getHello()": "infinite"
              }
            },
            "methodIdentifiers": {
              "getHello()": "8da9b772"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getHello\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A mock implementation of a SmartLoan to check if upgrade mechanism correctly update contract logic\",\"methods\":{},\"title\":\"SimpleContract\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/mock/SimpleContract.sol\":\"SimpleContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mock/SimpleContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n// Last deployed using commit: ;\\npragma solidity ^0.6.6;\\n\\n/**\\n * @title SimpleContract\\n * @dev A mock implementation of a SmartLoan to check if upgrade mechanism correctly update contract logic\\n */\\ncontract SimpleContract {\\n  function getHello() public view  returns (string memory) {\\n    return \\\"Hello world\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x451fa7f4d893b1cf6010054d82a3a260e0d179eae7ebc944be38b6e79785e842\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/mock/SimpleContract.sol:10:3: Warning: Function state mutability can be restricted to pure\n  function getHello() public view  returns (string memory) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 353,
          "file": "contracts/mock/SimpleContract.sol",
          "start": 265
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/deployment/SimpleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/deployment/SimpleFactory.sol",
          "exportedSymbols": {
            "SimpleFactory": [
              26
            ]
          },
          "id": 27,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.6",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "111:22:0"
            },
            {
              "absolutePath": "contracts/mock/SimpleContract.sol",
              "file": "../mock/SimpleContract.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 27,
              "sourceUnit": 39,
              "src": "135:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                38
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "174:96:0",
                "text": "@title PoolFactory\n@dev Contract factory allowing anyone to deploy a pool contract"
              },
              "fullyImplemented": true,
              "id": 26,
              "linearizedBaseContracts": [
                26
              ],
              "name": "SimpleFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 19,
                    "nodeType": "Block",
                    "src": "327:101:0",
                    "statements": [
                      {
                        "assignments": [
                          7
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7,
                            "mutability": "mutable",
                            "name": "pool",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 19,
                            "src": "333:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleContract_$38",
                              "typeString": "contract SimpleContract"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 6,
                              "name": "SimpleContract",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 38,
                              "src": "333:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimpleContract_$38",
                                "typeString": "contract SimpleContract"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 11,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "355:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleContract_$38_$",
                              "typeString": "function () returns (contract SimpleContract)"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 8,
                              "name": "SimpleContract",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 38,
                              "src": "359:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimpleContract_$38",
                                "typeString": "contract SimpleContract"
                              }
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "355:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleContract_$38",
                            "typeString": "contract SimpleContract"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "333:42:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 15,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "417:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SimpleContract_$38",
                                    "typeString": "contract SimpleContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SimpleContract_$38",
                                    "typeString": "contract SimpleContract"
                                  }
                                ],
                                "id": 14,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "409:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "409:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 16,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "409:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12,
                            "name": "SimpleContractDeployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "386:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 18,
                        "nodeType": "EmitStatement",
                        "src": "381:42:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "14d52751",
                  "id": 20,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "317:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "327:0:0"
                  },
                  "scope": 26,
                  "src": "298:130:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "432:104:0",
                    "text": "@dev emitted after pool is deployed by any user\n@param poolAddress of deployed pool*"
                  },
                  "id": 25,
                  "name": "SimpleContractDeployed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "poolAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 25,
                        "src": "568:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "568:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "567:21:0"
                  },
                  "src": "539:50:0"
                }
              ],
              "scope": 27,
              "src": "271:320:0"
            }
          ],
          "src": "111:480:0"
        },
        "id": 0
      },
      "contracts/mock/SimpleContract.sol": {
        "ast": {
          "absolutePath": "contracts/mock/SimpleContract.sol",
          "exportedSymbols": {
            "SimpleContract": [
              38
            ]
          },
          "id": 39,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 28,
              "literals": [
                "solidity",
                "^",
                "0.6",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 29,
                "nodeType": "StructuredDocumentation",
                "src": "97:139:1",
                "text": "@title SimpleContract\n@dev A mock implementation of a SmartLoan to check if upgrade mechanism correctly update contract logic"
              },
              "fullyImplemented": true,
              "id": 38,
              "linearizedBaseContracts": [
                38
              ],
              "name": "SimpleContract",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 36,
                    "nodeType": "Block",
                    "src": "322:31:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "48656c6c6f20776f726c64",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "335:13:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ed6c11b0b5b808960df26f5bfc471d04c1995b0ffd2055925ad1be28d6baadfd",
                            "typeString": "literal_string \"Hello world\""
                          },
                          "value": "Hello world"
                        },
                        "functionReturnParameters": 33,
                        "id": 35,
                        "nodeType": "Return",
                        "src": "328:20:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "8da9b772",
                  "id": 37,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHello",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "282:2:1"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 37,
                        "src": "307:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "307:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "306:15:1"
                  },
                  "scope": 38,
                  "src": "265:88:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 39,
              "src": "237:118:1"
            }
          ],
          "src": "72:284:1"
        },
        "id": 1
      }
    }
  }
}
